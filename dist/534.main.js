"use strict";exports.id=534,exports.ids=[534],exports.modules={994:(t,c,e)=>{e.d(c,{Z:()=>n});var o=e(185),l=e.n(o);const n=class{collection;constructor(t,c){this.collection=l().model(t,c)}async getAll(){try{return await this.collection.find({})}catch(t){return console.log(t),[]}}async deleteAll(){try{await await this.collection.deleteMany({}),console.log("Archivo vaciado")}catch(t){console.log("No se encontrÃ³ el archivo",t)}}async getById(t){try{return await this.collection.findById(t)}catch(t){console.log(t)}}async deleteById(t){try{return await this.collection.findByIdAndDelete(t)}catch(t){console.log(t)}}}},534:(t,c,e)=>{e.a(t,(async(t,o)=>{try{e.r(c),e.d(c,{default:()=>a});var l=e(971),n=e(994),r=t([l]);l=(r.then?(await r)():r)[0];class s extends n.Z{constructor(){super("carts",{products:{type:[Object],default:[]}})}async save(){try{return this.collection.save()}catch(t){return console.log(t),null}}async addProduct(t,c){try{const e=l.U.getById(c);return this.collection.findByIdAndUpdate(t,{$push:{products:e}})}catch(t){return console.log(t),null}}async removeProduct(t,c){try{return this.collection.findByIdAndUpdate(t,{$pull:{products:{_id:c}}})}catch(t){return console.log(t),null}}}const a=s;o()}catch(t){o(t)}}))}};